import { useState } from "react";
import FoodCard from "@/components/FoodCard";
import Icon from "@/components/ui/icon";

interface Food {
  id: number;
  name: string;
  image: string;
  description: string;
  emoji: string;
}

const Index = () => {
  const [foodItems, setFoodItems] = useState<Food[]>([
    {
      id: 1,
      name: "–õ–æ—Å–æ—Å–µ–≤—ã–µ —Ä–æ–ª–ª—ã",
      image:
        "https://images.unsplash.com/photo-1579584425555-c3ce17fd4351?w=300&h=300&fit=crop",
      description: "–ù–µ–∂–Ω—ã–µ —Ä–æ–ª–ª—ã —Å —Å–≤–µ–∂–∏–º –ª–æ—Å–æ—Å–µ–º",
      emoji: "üç±",
    },
    {
      id: 2,
      name: "–°—É—à–∏ —Å–µ—Ç",
      image:
        "https://images.unsplash.com/photo-1553621042-f6e147245754?w=300&h=300&fit=crop",
      description: "–ê—Å—Å–æ—Ä—Ç–∏ –∏–∑ –ª—É—á—à–∏—Ö —Å—É—à–∏",
      emoji: "üç£",
    },
    {
      id: 3,
      name: "–†–∞–º–µ–Ω",
      image:
        "https://images.unsplash.com/photo-1569718212165-3a8278d5f624?w=300&h=300&fit=crop",
      description: "–ì–æ—Ä—è—á–∏–π —è–ø–æ–Ω—Å–∫–∏–π —Å—É–ø —Å –ª–∞–ø—à–æ–π",
      emoji: "üçú",
    },
    {
      id: 4,
      name: "–ü–∏—Ü—Ü–∞ –ú–∞—Ä–≥–∞—Ä–∏—Ç–∞",
      image:
        "https://images.unsplash.com/photo-1565299624946-b28f40a0ca4b?w=300&h=300&fit=crop",
      description: "–ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∞—è –∏—Ç–∞–ª—å—è–Ω—Å–∫–∞—è –ø–∏—Ü—Ü–∞",
      emoji: "üçï",
    },
    {
      id: 5,
      name: "–ë—É—Ä–≥–µ—Ä",
      image:
        "https://images.unsplash.com/photo-1568901346375-23c9450c58cd?w=300&h=300&fit=crop",
      description: "–°–æ—á–Ω—ã–π –±—É—Ä–≥–µ—Ä —Å –∫–∞—Ä—Ç–æ—Ñ–µ–ª–µ–º —Ñ—Ä–∏",
      emoji: "üçî",
    },
    {
      id: 6,
      name: "–ü–∞—Å—Ç–∞",
      image:
        "https://images.unsplash.com/photo-1551183053-bf91a1d81141?w=300&h=300&fit=crop",
      description: "–î–æ–º–∞—à–Ω—è—è –ø–∞—Å—Ç–∞ —Å —Ç–æ–º–∞—Ç–Ω—ã–º —Å–æ—É—Å–æ–º",
      emoji: "üçù",
    },
    {
      id: 7,
      name: "–¢–∞–∫–æ",
      image:
        "https://images.unsplash.com/photo-1565299585323-38174c5200ed?w=300&h=300&fit=crop",
      description: "–ú–µ–∫—Å–∏–∫–∞–Ω—Å–∫–∏–µ —Ç–∞–∫–æ —Å –æ–≤–æ—â–∞–º–∏",
      emoji: "üåÆ",
    },
    {
      id: 8,
      name: "–î–∏–º—Å–∞–º—ã",
      image:
        "https://images.unsplash.com/photo-1496116218417-1a781b1c416c?w=300&h=300&fit=crop",
      description: "–ö–∏—Ç–∞–π—Å–∫–∏–µ –ø–∞—Ä–æ–≤—ã–µ –ø–µ–ª—å–º–µ–Ω–∏",
      emoji: "ü•ü",
    },
  ]);

  const allFoodOptions = [
    {
      name: "–§–∏–ª–∞–¥–µ–ª—å—Ñ–∏—è —Ä–æ–ª–ª",
      image:
        "https://images.unsplash.com/photo-1579584425555-c3ce17fd4351?w=300&h=300&fit=crop",
      description: "–†–æ–ª–ª —Å –ª–æ—Å–æ—Å–µ–º –∏ —Å—ã—Ä–æ–º",
      emoji: "üç±",
    },
    {
      name: "–ö–∞–ª–∏—Ñ–æ—Ä–Ω–∏—è —Ä–æ–ª–ª",
      image:
        "https://images.unsplash.com/photo-1553621042-f6e147245754?w=300&h=300&fit=crop",
      description: "–†–æ–ª–ª —Å –∫—Ä–∞–±–æ–º –∏ –∞–≤–æ–∫–∞–¥–æ",
      emoji: "üç£",
    },
    {
      name: "–¢–µ–º–ø—É—Ä–∞ —Ä–æ–ª–ª",
      image:
        "https://images.unsplash.com/photo-1563612116625-3012372fccce?w=300&h=300&fit=crop",
      description: "–•—Ä—É—Å—Ç—è—â–∏–π —Ä–æ–ª–ª –≤ —Ç–µ–º–ø—É—Ä–µ",
      emoji: "üç§",
    },
    {
      name: "–¢–æ–º —è–º",
      image:
        "https://images.unsplash.com/photo-1569718212165-3a8278d5f624?w=300&h=300&fit=crop",
      description: "–û—Å—Ç—Ä—ã–π —Ç–∞–π—Å–∫–∏–π —Å—É–ø",
      emoji: "üçú",
    },
    {
      name: "–§–æ –±–æ",
      image:
        "https://images.unsplash.com/photo-1432139555190-58524dae6a55?w=300&h=300&fit=crop",
      description: "–í—å–µ—Ç–Ω–∞–º—Å–∫–∏–π —Å—É–ø —Å –≥–æ–≤—è–¥–∏–Ω–æ–π",
      emoji: "ü•¢",
    },
    {
      name: "–ü–µ–ø–ø–µ—Ä–æ–Ω–∏ –ø–∏—Ü—Ü–∞",
      image:
        "https://images.unsplash.com/photo-1565299624946-b28f40a0ca4b?w=300&h=300&fit=crop",
      description: "–ü–∏—Ü—Ü–∞ —Å –ø–µ–ø–ø–µ—Ä–æ–Ω–∏",
      emoji: "üçï",
    },
    {
      name: "–ß–µ—Ç—ã—Ä–µ —Å—ã—Ä–∞",
      image:
        "https://images.unsplash.com/photo-1571407970349-bc81e7e96d47?w=300&h=300&fit=crop",
      description: "–ü–∏—Ü—Ü–∞ —Å —á–µ—Ç—ã—Ä—å–º—è —Å—ã—Ä–∞–º–∏",
      emoji: "üßÄ",
    },
    {
      name: "–ß–∏–∑–±—É—Ä–≥–µ—Ä",
      image:
        "https://images.unsplash.com/photo-1568901346375-23c9450c58cd?w=300&h=300&fit=crop",
      description: "–ë—É—Ä–≥–µ—Ä —Å —Ä–∞—Å–ø–ª–∞–≤–ª–µ–Ω–Ω—ã–º —Å—ã—Ä–æ–º",
      emoji: "üçî",
    },
    {
      name: "–í–µ–≥–≥–∏ –±—É—Ä–≥–µ—Ä",
      image:
        "https://images.unsplash.com/photo-1520072959219-c595dc870360?w=300&h=300&fit=crop",
      description: "–í–µ–≥–µ—Ç–∞—Ä–∏–∞–Ω—Å–∫–∏–π –±—É—Ä–≥–µ—Ä",
      emoji: "ü•ó",
    },
    {
      name: "–ö–∞—Ä–±–æ–Ω–∞—Ä–∞",
      image:
        "https://images.unsplash.com/photo-1551183053-bf91a1d81141?w=300&h=300&fit=crop",
      description: "–ü–∞—Å—Ç–∞ —Å –±–µ–∫–æ–Ω–æ–º –∏ —Å—ã—Ä–æ–º",
      emoji: "üçù",
    },
    {
      name: "–ë–æ–ª–æ–Ω—å–µ–∑–µ",
      image:
        "https://images.unsplash.com/photo-1572441713132-51c75654db73?w=300&h=300&fit=crop",
      description: "–ü–∞—Å—Ç–∞ —Å –º—è—Å–Ω—ã–º —Å–æ—É—Å–æ–º",
      emoji: "üçù",
    },
  ];

  const handleFoodClick = (foodId: number) => {
    setFoodItems((prev) =>
      prev.map((food) => {
        if (food.id === foodId) {
          const randomFood =
            allFoodOptions[Math.floor(Math.random() * allFoodOptions.length)];
          return {
            ...food,
            name: randomFood.name,
            image: randomFood.image,
            description: randomFood.description,
            emoji: randomFood.emoji,
          };
        }
        return food;
      }),
    );
  };

  return (
    <div className="min-h-screen bg-background">
      <div className="container max-w-6xl mx-auto px-4 py-8">
        {/* Header */}
        <div className="text-center mb-8">
          <div className="flex items-center justify-center gap-3 mb-4">
            <Icon name="UtensilsCrossed" size={32} className="text-accent" />
            <h1 className="text-2xl food-text text-accent">
              üç£ –í–ö–£–°–ù–ê–Ø –ì–ê–õ–ï–†–ï–Ø üçú
            </h1>
            <Icon name="UtensilsCrossed" size={32} className="text-accent" />
          </div>
          <p className="text-sm text-muted-foreground">
            –ù–∞–∂–º–∏—Ç–µ –Ω–∞ –±–ª—é–¥–æ, —á—Ç–æ–±—ã –æ–Ω–æ —Å–º–µ–Ω–∏–ª–æ—Å—å –Ω–∞ –Ω–æ–≤–æ–µ!
          </p>
        </div>

        {/* Food Grid */}
        <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 mb-8">
          {foodItems.map((food) => (
            <FoodCard key={food.id} food={food} onClick={handleFoodClick} />
          ))}
        </div>

        {/* Footer */}
        <div className="text-center mt-12 pt-8 border-t border-border">
          <p className="text-xs text-muted-foreground food-text">
            üåü –ü—Ä–∏—è—Ç–Ω–æ–≥–æ –∞–ø–ø–µ—Ç–∏—Ç–∞! üåü
          </p>
        </div>
      </div>
    </div>
  );
};

export default Index;
